{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, vShow as _vShow, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Word Journeyman\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\"\n}, \"首页\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\"\n}, \"关于我们\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"center-container\"\n};\nconst _hoisted_6 = {\n  class: \"search-bar\"\n};\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"countdown-message\"\n};\nconst _hoisted_9 = {\n  class: \"chat-container\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"问问ChatGPT\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"chat-box\"\n};\nconst _hoisted_12 = {\n  class: \"chat-input\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"©2023 Word Journeyman\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_contact_us = _resolveComponent(\"contact-us\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 添加一个头部 \"), _createElementVNode(\"header\", null, [_hoisted_2, _createElementVNode(\"nav\", null, [_hoisted_3, _hoisted_4, _createVNode(_component_contact_us)])]), _createCommentVNode(\" 搜索栏和卡片 \"), _createElementVNode(\"div\", _hoisted_5, [_createCommentVNode(\" 搜索栏 \"), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchTerm = $event),\n    type: \"text\",\n    placeholder: \"搜索单词...\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.searchWord && _ctx.searchWord(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.searchTerm]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.searchWord && _ctx.searchWord(...args))\n  }, \"搜索\")]), _createCommentVNode(\" 单词卡片 \"), _createElementVNode(\"div\", {\n    id: \"card\",\n    class: \"card\",\n    onMouseleave: _cache[5] || (_cache[5] = (...args) => _ctx.startCountdown && _ctx.startCountdown(...args)),\n    onMouseenter: _cache[6] || (_cache[6] = (...args) => _ctx.stopCountdown && _ctx.stopCountdown(...args))\n  }, [_createCommentVNode(\" 卡片内容 \"), _createElementVNode(\"h1\", null, _toDisplayString(_ctx.words[_ctx.currentWordIndex].word), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.showDefinition && _ctx.showDefinition(...args)),\n    disabled: _ctx.isDefinitionVisible\n  }, \"显示定义\", 8 /* PROPS */, _hoisted_7), _withDirectives(_createElementVNode(\"p\", null, _toDisplayString(_ctx.words[_ctx.currentWordIndex].definition), 513 /* TEXT, NEED_PATCH */), [[_vShow, _ctx.isDefinitionVisible]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.nextWord && _ctx.nextWord(...args))\n  }, \"下一个单词\"), _createCommentVNode(\" 小字提醒 \"), _ctx.focusLostCountdown > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \" 焦点将在 \" + _toDisplayString(_ctx.focusLostCountdown) + \" 秒后消失 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" <p v-if=\\\"focusLostCountdown > 0\\\" class=\\\"countdown countdown-message\\\">\\n        焦点将在 {{ focusLostCountdown }} 秒后消失\\n      </p> \")]), _createCommentVNode(\" AI聊天对话框 \"), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", {\n      class: _normalizeClass(message.sender)\n    }, _toDisplayString(message.text), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.chatInput = $event),\n    type: \"text\",\n    placeholder: \"输入你的问题...\",\n    onKeyup: _cache[8] || (_cache[8] = _withKeys((...args) => _ctx.sendChatMessage && _ctx.sendChatMessage(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.chatInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.sendChatMessage && _ctx.sendChatMessage(...args))\n  }, \"发送\")])]), _createCommentVNode(\" 添加一个底部 \"), _hoisted_13]);\n}","map":{"version":3,"names":["id","_createElementVNode","href","class","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_contact_us","_hoisted_5","_hoisted_6","_ctx","searchTerm","$event","type","placeholder","onKeyup","_cache","_withKeys","args","searchWord","onClick","onMouseleave","startCountdown","onMouseenter","stopCountdown","_toDisplayString","words","currentWordIndex","word","showDefinition","disabled","isDefinitionVisible","_hoisted_7","definition","nextWord","focusLostCountdown","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","_renderList","chatMessages","message","index","key","_normalizeClass","sender","text","_hoisted_12","chatInput","sendChatMessage","_hoisted_13"],"sources":["H:\\单词学习项目\\word_study\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 添加一个头部 -->\n    <header>\n      <h1>Word Journeyman</h1>\n      <nav>\n        <a href=\"#\">首页</a>\n        <a href=\"#\">关于我们</a>\n        <contact-us></contact-us>\n      </nav>\n    </header>\n\n    <!-- 搜索栏和卡片 -->\n    <div class=\"center-container\">\n      <!-- 搜索栏 -->\n      <div class=\"search-bar\">\n        <input\n          v-model=\"searchTerm\"\n          type=\"text\"\n          placeholder=\"搜索单词...\"\n          @keyup.enter=\"searchWord\"\n        />\n        <button @click=\"searchWord\">搜索</button>\n      </div>\n\n      <!-- 单词卡片 -->\n      <div id=\"card\" class=\"card\" @mouseleave=\"startCountdown\" @mouseenter=\"stopCountdown\">\n        <!-- 卡片内容 -->\n        <h1>{{ words[currentWordIndex].word }}</h1>\n        <button @click=\"showDefinition\" :disabled=\"isDefinitionVisible\">显示定义</button>\n        <p v-show=\"isDefinitionVisible\">{{ words[currentWordIndex].definition }}</p>\n        <button @click=\"nextWord\">下一个单词</button>\n      \n        <!-- 小字提醒 -->\n        <p v-if=\"focusLostCountdown > 0\" class=\"countdown-message\">\n          焦点将在 {{ focusLostCountdown }} 秒后消失\n        </p>\n      </div>\n      \n      <!-- <p v-if=\"focusLostCountdown > 0\" class=\"countdown countdown-message\">\n        焦点将在 {{ focusLostCountdown }} 秒后消失\n      </p> -->\n    </div>\n\n         <!-- AI聊天对话框 -->\n  <div class=\"chat-container\">\n    <h2>问问ChatGPT</h2>\n    <div class=\"chat-box\">\n      <div v-for=\"(message, index) in chatMessages\" :key=\"index\">\n        <p :class=\"message.sender\">{{ message.text }}</p>\n      </div>\n    </div>\n    <div class=\"chat-input\">\n      <input \n        v-model=\"chatInput\"\n        type=\"text\"\n        placeholder=\"输入你的问题...\"\n        @keyup.enter=\"sendChatMessage\"\n      />\n      <button @click=\"sendChatMessage\">发送</button>\n    </div>\n  </div>\n\n    <!-- 添加一个底部 -->\n    <footer>\n      <p>©2023 Word Journeyman</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport ContactUs from './components/ContactUs.vue';  // 确保这里的路径是正确的\n\nexport default {\n  components: {\n    'contact-us': ContactUs,  // 在这里注册你的组件\n  },\n  data() {\n    return {\n      words: [\n        { word: \"apple\", definition: \"一种常见的水果\" },\n        { word: \"banana\", definition: \"一种常见的黄色水果\" },\n        { word: \"cat\", definition: \"一种家养的小型猫科动物\" },\n      ],\n      currentWordIndex: 0,\n      isDefinitionVisible: false,\n      searchTerm: \"\",\n      focusLostCountdown: 0,\n      countdownInterval: null, // 新增一个变量来存储倒计时的interval\n    };\n  },\n  methods: {\n    showDefinition() {\n      this.isDefinitionVisible = true;\n    },\n    nextWord() {\n      this.currentWordIndex = (this.currentWordIndex + 1) % this.words.length;\n      this.isDefinitionVisible = false;\n    },\n    searchWord() {\n      const index = this.words.findIndex(\n        (word) => word.word === this.searchTerm\n      );\n      if (index !== -1) {\n        this.currentWordIndex = index;\n        this.isDefinitionVisible = false;\n      } else {\n        alert(\"未找到该单词\");\n      }\n    },\n    startCountdown() {\n      this.focusLostCountdown = 5;\n      this.countdownInterval = setInterval(() => {\n        if (this.focusLostCountdown > 0) {\n          this.focusLostCountdown--;\n        } else {\n          clearInterval(this.countdownInterval);\n        }\n      }, 1000);\n    },\n    stopCountdown() {\n      clearInterval(this.countdownInterval);\n      this.focusLostCountdown = 0;\n    },\n    async sendChatMessage() {\n      // 确保输入不为空\n      if (this.chatInput.trim()) {\n        // 添加用户消息到聊天框\n        this.chatMessages.push({ sender: 'user', text: this.chatInput });\n        \n        // 使用OpenAI的API发送聊天消息，这里假设您已经设置了一个名为sendToChatbot的方法\n        const response = await this.sendToChatbot(this.chatInput);\n        if (response) {\n          // 添加聊天机器人的回应到聊天框\n          this.chatMessages.push({ sender: 'bot', text: response });\n        }\n\n        // 清空输入框\n        this.chatInput = \"\";\n      }\n    },\n\n    // 这个方法应该连接到你的聊天机器人API，这里只是一个占位符\n    // 注意，你需要自己实现这个方法\n    async sendToChatbot(message) {\n      // 发送请求到聊天机器人API，并返回机器人的回应\n    },\n  },\n  },\n};\n</script>\n\n\n<style scoped>\n@import url('../css/styles.css');\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}