{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      userInput: \"\",\n      isChatOpen: false,\n      messages: []\n    };\n  },\n  methods: {\n    sendMessage() {\n      if (this.userInput.trim() === \"\") {\n        return; // 用户输入为空，不执行任何操作\n      }\n\n      // 将连续的换行替换为一个换行\n      this.userInput = this.userInput.replace(/\\n\\s*\\n/g, \"\\n\");\n      this.messages.push({\n        sender: \"user\",\n        text: this.userInput\n      });\n      const userInput = this.userInput;\n      this.userInput = \"\";\n\n      // 滚动聊天框到底部\n      const chatContent = this.$el.querySelector(\".chat-content\");\n      chatContent.scrollTop = chatContent.scrollHeight;\n\n      // 发送请求到Flask服务器\n      axios.post(\"http://localhost:5000/api/chat\", {\n        message: userInput\n      }).then(response => {\n        // 服务器响应成功\n        this.messages.push({\n          sender: \"bot\",\n          text: response.data.message\n        });\n        this.$nextTick(() => {\n          // 再次滚动聊天框到底部\n          chatContent.scrollTop = chatContent.scrollHeight;\n        });\n      }).catch(error => {\n        // 处理错误\n        console.error(error);\n      });\n    },\n    handleEnterKey(event) {\n      if (!event.shiftKey) {\n        event.preventDefault();\n        this.sendMessage();\n      }\n    },\n    handleShiftEnterKey(event) {\n      if (event.shiftKey) {\n        event.preventDefault();\n        this.userInput += \"\\n\";\n      }\n    },\n    handleCtrlEnterKey(event) {\n      if (event.ctrlKey) {\n        event.preventDefault();\n        this.sendMessage();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userInput","isChatOpen","messages","methods","sendMessage","trim","replace","push","sender","text","chatContent","$el","querySelector","scrollTop","scrollHeight","post","message","then","response","$nextTick","catch","error","console","handleEnterKey","event","shiftKey","preventDefault","handleShiftEnterKey","handleCtrlEnterKey","ctrlKey"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-box-container\">\r\n    <div v-if=\"isChatOpen\" class=\"chat-box\">\r\n      <div class=\"chat-header\" @click=\"isChatOpen = !isChatOpen\">\r\n        <h3 class=\"header-text\">Word Usage</h3>\r\n      </div>\r\n      <div class=\"chat-content\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\r\n          <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n            <pre>{{ message.text }}</pre>\r\n          </div>\r\n          <div v-else class=\"bot-message\">\r\n            <pre>{{ message.text }}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-input\">\r\n        <textarea\r\n  v-model=\"userInput\"\r\n  placeholder=\"Type your message...\"\r\n  @keydown.enter.exact.prevent=\"handleEnterKey\"\r\n  @keydown.enter.ctrl.exact.prevent=\"handleCtrlEnterKey\"\r\n  @keydown.enter.exact.shift=\"handleShiftEnterKey\"\r\n></textarea>\r\n\r\n        <button class=\"send-button\" @click=\"sendMessage\">Send</button>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"chat-icon\" @click=\"isChatOpen = !isChatOpen\">\r\n      <font-awesome-icon icon=\"comments\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInput: \"\",\r\n      isChatOpen: false,\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      if (this.userInput.trim() === \"\") {\r\n        return; // 用户输入为空，不执行任何操作\r\n      }\r\n\r\n      // 将连续的换行替换为一个换行\r\n      this.userInput = this.userInput.replace(/\\n\\s*\\n/g, \"\\n\");\r\n\r\n      this.messages.push({ sender: \"user\", text: this.userInput });\r\n      const userInput = this.userInput;\r\n      this.userInput = \"\";\r\n\r\n      // 滚动聊天框到底部\r\n      const chatContent = this.$el.querySelector(\".chat-content\");\r\n      chatContent.scrollTop = chatContent.scrollHeight;\r\n\r\n      // 发送请求到Flask服务器\r\n      axios\r\n        .post(\"http://localhost:5000/api/chat\", { message: userInput })\r\n        .then((response) => {\r\n          // 服务器响应成功\r\n          this.messages.push({ sender: \"bot\", text: response.data.message });\r\n\r\n          this.$nextTick(() => {\r\n            // 再次滚动聊天框到底部\r\n            chatContent.scrollTop = chatContent.scrollHeight;\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          // 处理错误\r\n          console.error(error);\r\n        });\r\n    },\r\n\r\n    handleEnterKey(event) {\r\n      if (!event.shiftKey) {\r\n        event.preventDefault();\r\n        this.sendMessage();\r\n      }\r\n    },\r\n    handleShiftEnterKey(event) {\r\n      if (event.shiftKey) {\r\n        event.preventDefault();\r\n        this.userInput += \"\\n\";\r\n      }\r\n    },\r\n    handleCtrlEnterKey(event) {\r\n    if (event.ctrlKey) {\r\n      event.preventDefault();\r\n      this.sendMessage();\r\n    }\r\n  },\r\n\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style scoped>\r\n@import url(\"../../css/ChatBoxStyles.css\");\r\n</style>\r\n  "],"mappings":";AAmCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACJ,SAAS,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAChC,OAAM,CAAE;MACV;;MAEA;MACA,IAAI,CAACL,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACM,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC;MAEzD,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE,IAAI,CAACT;MAAU,CAAC,CAAC;MAC5D,MAAMA,SAAQ,GAAI,IAAI,CAACA,SAAS;MAChC,IAAI,CAACA,SAAQ,GAAI,EAAE;;MAEnB;MACA,MAAMU,WAAU,GAAI,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,eAAe,CAAC;MAC3DF,WAAW,CAACG,SAAQ,GAAIH,WAAW,CAACI,YAAY;;MAEhD;MACAhB,KAAI,CACDiB,IAAI,CAAC,gCAAgC,EAAE;QAAEC,OAAO,EAAEhB;MAAU,CAAC,EAC7DiB,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAI,CAAChB,QAAQ,CAACK,IAAI,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,IAAI,EAAES,QAAQ,CAACnB,IAAI,CAACiB;QAAQ,CAAC,CAAC;QAElE,IAAI,CAACG,SAAS,CAAC,MAAM;UACnB;UACAT,WAAW,CAACG,SAAQ,GAAIH,WAAW,CAACI,YAAY;QAClD,CAAC,CAAC;MACJ,CAAC,EACAM,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IAEDE,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACA,KAAK,CAACC,QAAQ,EAAE;QACnBD,KAAK,CAACE,cAAc,CAAC,CAAC;QACtB,IAAI,CAACtB,WAAW,CAAC,CAAC;MACpB;IACF,CAAC;IACDuB,mBAAmBA,CAACH,KAAK,EAAE;MACzB,IAAIA,KAAK,CAACC,QAAQ,EAAE;QAClBD,KAAK,CAACE,cAAc,CAAC,CAAC;QACtB,IAAI,CAAC1B,SAAQ,IAAK,IAAI;MACxB;IACF,CAAC;IACD4B,kBAAkBA,CAACJ,KAAK,EAAE;MAC1B,IAAIA,KAAK,CAACK,OAAO,EAAE;QACjBL,KAAK,CAACE,cAAc,CAAC,CAAC;QACtB,IAAI,CAACtB,WAAW,CAAC,CAAC;MACpB;IACF;EAEA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}