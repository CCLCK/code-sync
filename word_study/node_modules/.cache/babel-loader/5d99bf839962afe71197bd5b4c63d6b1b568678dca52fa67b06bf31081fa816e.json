{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      showLogin: false,\n      showRegister: false,\n      email: \"\",\n      password: \"\",\n      verificationCode: \"\",\n      user: null,\n      emailError: \"\",\n      rememberMe: false,\n      termsAccepted: false\n    };\n  },\n  methods: {\n    async sendVerificationCode() {\n      try {\n        await axios.post(\"http://localhost:5400/register\", {\n          email: this.email,\n          password: this.password\n        });\n        this.$message.success(\"Verification code sent successfully\");\n      } catch (error) {\n        console.error(\"Error sending verification code:\", error);\n        this.$message.error(\"Email already registered\");\n      }\n    },\n    validateEmail() {\n      const re = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n      if (!re.test(this.email)) {\n        this.emailError = \"请输入有效的电子邮件地址\";\n      } else {\n        this.emailError = \"\";\n      }\n    },\n    login(event) {\n      event.preventDefault();\n      axios.post(\"http://localhost:5400/login\", {\n        email: this.email,\n        password: this.password,\n        rememberMe: this.rememberMe\n      }).then(response => {\n        if (response.data.message == \"Logged in successfully\") {\n          this.user = this.email;\n          this.showLogin = false;\n          localStorage.setItem('user_id', response.data.user_id);\n        } else {\n          this.$message.error(response.data.message);\n        }\n      }).catch(error => {\n        console.error(\"Error logging in:\", error);\n        if (error.response) {\n          this.$message.error(error.response.data);\n        } else {\n          this.$message.error(\"An error occurred\");\n        }\n      });\n    },\n    register(event) {\n      event.preventDefault();\n      axios.post(\"http://localhost:5400/verify\", {\n        email: this.email,\n        password: this.password,\n        verification_code: this.verificationCode\n      }).then(response => {\n        if (response.data.message == \"User registered successfully\") {\n          this.user = this.email;\n          this.showRegister = false;\n          this.$message.success(\"User registered successfully\");\n          setTimeout(() => {\n            location.reload();\n          }, 1000);\n        } else {\n          this.$message.error(response.data.message);\n        }\n      }).catch(error => {\n        console.error(\"Error verifying account:\", error);\n        this.$message.error(\"Error verifying account\");\n      });\n    },\n    logout() {\n      this.user = null;\n      location.reload();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","showLogin","showRegister","email","password","verificationCode","user","emailError","rememberMe","termsAccepted","methods","sendVerificationCode","post","$message","success","error","console","validateEmail","re","test","login","event","preventDefault","then","response","message","localStorage","setItem","user_id","catch","register","verification_code","setTimeout","location","reload","logout"],"sources":["D:\\code-sync-master\\word_study\\src\\components\\UserActions.vue"],"sourcesContent":["<template>\n  <el-row class=\"user-actions\">\n    <el-col v-if=\"!user\">\n      <el-button @click=\"showLogin = true\">登录</el-button>\n      <el-button @click=\"showRegister = true\">注册</el-button>\n    </el-col>\n    <el-col v-else>\n      <p>欢迎，{{ this.email }}</p>\n      <el-button @click=\"logout\">退出</el-button>\n    </el-col>\n\n    <el-dialog title=\"登录\" v-model=\"showLogin\">\n      <el-form @submit.prevent=\"login\">\n        <el-form-item label=\"邮箱\" :error=\"emailError\">\n          <el-input v-model=\"email\" placeholder=\"邮箱\" @input=\"validateEmail\" />\n        </el-form-item>\n        <el-form-item label=\"密码\">\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\n        </el-form-item>\n        <!-- <el-form-item>\n          <el-checkbox v-model=\"rememberMe\">记住我</el-checkbox>\n        </el-form-item> -->\n        <el-form-item>\n          <el-button type=\"primary\" native-type=\"submit\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n\n    <el-dialog title=\"注册\" v-model=\"showRegister\">\n      <el-form @submit.prevent=\"register\">\n        <el-form-item label=\"邮箱&nbsp;&nbsp;&nbsp;&nbsp;\" :error=\"emailError\">\n          <el-input v-model=\"email\" placeholder=\"邮箱\" @input=\"validateEmail\" />\n          \n        </el-form-item>\n        <el-form-item label=\"密码&nbsp;&nbsp;&nbsp;&nbsp;\">\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\n        </el-form-item>\n        <el-form-item label=\"验证码\">\n          <el-input v-model=\"verificationCode\" placeholder=\"验证码\" />\n          <el-button @click=\"sendVerificationCode\">发送验证码</el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-checkbox v-model=\"termsAccepted\"\n            >我已阅读并接受服务条款</el-checkbox\n          >\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            native-type=\"submit\"\n            :disabled=\"\n              !termsAccepted || !email || !password || !verificationCode\n            \"\n            >注册</el-button\n          >\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </el-row>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      showLogin: false,\n      showRegister: false,\n      email: \"\",\n      password: \"\",\n      verificationCode: \"\",\n      user: null,\n      emailError: \"\",\n      rememberMe: false,\n      termsAccepted: false,\n    };\n  },\n  methods: {\n    async sendVerificationCode() {\n      try {\n        await axios.post(\"http://localhost:5400/register\", {\n          email: this.email,\n          password: this.password,\n        });\n        this.$message.success(\"Verification code sent successfully\");\n      } catch (error) {\n        console.error(\"Error sending verification code:\", error);\n        this.$message.error(\"Email already registered\");\n      }\n    },\n    validateEmail() {\n      const re = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n      if (!re.test(this.email)) {\n        this.emailError = \"请输入有效的电子邮件地址\";\n      } else {\n        this.emailError = \"\";\n      }\n    },\n    login(event) {\n      event.preventDefault();\n\n      axios\n        .post(\"http://localhost:5400/login\", {\n          email: this.email,\n          password: this.password,\n          rememberMe: this.rememberMe,\n        })\n        .then((response) => {\n          if (response.data.message == \"Logged in successfully\") {\n            this.user = this.email;\n            this.showLogin = false;\n            localStorage.setItem('user_id', response.data.user_id);\n          } else {\n            this.$message.error(response.data.message);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error logging in:\", error);\n          if (error.response) {\n    this.$message.error(error.response.data);\n  } else {\n    this.$message.error(\"An error occurred\");\n  }\n        });\n    },\n    register(event) {\n      event.preventDefault();\n\n      axios\n        .post(\"http://localhost:5400/verify\", {\n          email: this.email,\n          password: this.password,\n          verification_code: this.verificationCode,\n        })\n        .then((response) => {\n          if (response.data.message == \"User registered successfully\") {\n            this.user = this.email;\n            this.showRegister = false;\n            this.$message.success(\"User registered successfully\");\n            setTimeout(() => {\n      location.reload();\n    }, 1000);\n          } else {\n            this.$message.error(response.data.message);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error verifying account:\", error);\n          this.$message.error(\"Error verifying account\");\n        });\n    },\n    logout() {\n  this.user = null;\n  location.reload();\n},\n  },\n};\n</script>\n\n<style scoped>\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}