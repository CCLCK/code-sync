{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport ContactUs from \"./components/ContactUs.vue\";\nexport default {\n  components: {\n    \"contact-us\": ContactUs\n  },\n  setup() {\n    const words = reactive([{\n      word: \"apple\",\n      definition: \"一种常见的水果\"\n    }, {\n      word: \"banana\",\n      definition: \"一种常见的黄色水果\"\n    }, {\n      word: \"cat\",\n      definition: \"一种家养的小型猫科动物\"\n    }]);\n    const currentWordIndex = ref(0);\n    const isDefinitionVisible = ref(false);\n    const searchTerm = ref(\"\");\n    const focusLostCountdown = ref(0);\n    const countdownInterval = ref(null);\n    const chatMessages = ref([]);\n    const chatInput = ref('');\n    const showDefinition = () => {\n      isDefinitionVisible.value = true;\n    };\n    const nextWord = () => {\n      currentWordIndex.value = (currentWordIndex.value + 1) % words.value.length;\n      isDefinitionVisible.value = false;\n    };\n    const searchWord = () => {\n      const index = words.value.findIndex(word => word.word === searchTerm.value);\n      if (index !== -1) {\n        currentWordIndex.value = index;\n        isDefinitionVisible.value = false;\n      } else {\n        alert(\"未找到该单词\");\n      }\n    };\n    const startCountdown = () => {\n      focusLostCountdown.value = 5;\n      countdownInterval.value = setInterval(() => {\n        if (focusLostCountdown.value > 0) {\n          focusLostCountdown.value--;\n        } else {\n          clearInterval(countdownInterval.value);\n        }\n      }, 1000);\n    };\n    const stopCountdown = () => {\n      clearInterval(countdownInterval.value);\n      focusLostCountdown.value = 0;\n    };\n    const sendChatMessage = async () => {\n      if (chatInput.value.trim()) {\n        chatMessages.value.push({\n          sender: \"user\",\n          text: chatInput.value\n        });\n        const response = await sendToChatbot(chatInput.value);\n        if (response) {\n          chatMessages.value.push({\n            sender: \"bot\",\n            text: response\n          });\n        }\n        chatInput.value = \"\";\n      }\n    };\n\n    // eslint-disable-next-line no-unused-vars\n    const sendToChatbot = async message => {\n      // 发送请求到聊天机器人API，并返回机器人的回应\n      // 这个函数需要你自己实现\n    };\n    return {\n      words,\n      currentWordIndex,\n      isDefinitionVisible,\n      searchTerm,\n      focusLostCountdown,\n      chatMessages,\n      chatInput,\n      showDefinition,\n      nextWord,\n      searchWord,\n      startCountdown,\n      stopCountdown,\n      sendChatMessage\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","ContactUs","components","setup","words","word","definition","currentWordIndex","isDefinitionVisible","searchTerm","focusLostCountdown","countdownInterval","chatMessages","chatInput","showDefinition","value","nextWord","length","searchWord","index","findIndex","alert","startCountdown","setInterval","clearInterval","stopCountdown","sendChatMessage","trim","push","sender","text","response","sendToChatbot","message"],"sources":["H:\\单词学习项目\\word_study\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 添加一个头部 -->\n    <header>\n      <h1>Word Journeyman</h1>\n      <nav>\n        <a href=\"#\">首页</a>\n        <a href=\"#\">关于我们</a>\n        <contact-us></contact-us>\n      </nav>\n    </header>\n\n    <!-- 搜索栏和卡片 -->\n    <div class=\"center-container\">\n      <!-- 搜索栏 -->\n      <div class=\"search-bar\">\n        <input\n          v-model=\"searchTerm\"\n          type=\"text\"\n          placeholder=\"搜索单词...\"\n          @keyup.enter=\"searchWord\"\n        />\n        <button @click=\"searchWord\">搜索</button>\n      </div>\n\n      <!-- 单词卡片 -->\n      <div\n        id=\"card\"\n        class=\"card\"\n        @mouseleave=\"startCountdown\"\n        @mouseenter=\"stopCountdown\"\n      >\n        <!-- 卡片内容 -->\n        <h1>{{ words[currentWordIndex].word }}</h1>\n        <button @click=\"showDefinition\" :disabled=\"isDefinitionVisible\">\n          显示定义\n        </button>\n        <p v-show=\"isDefinitionVisible\">\n          {{ words[currentWordIndex].definition }}\n        </p>\n        <button @click=\"nextWord\">下一个单词</button>\n\n        <!-- 小字提醒 -->\n        <p v-if=\"focusLostCountdown > 0\" class=\"countdown-message\">\n          焦点将在 {{ focusLostCountdown }} 秒后消失\n        </p>\n      </div>\n    </div>\n\n    <!-- AI聊天对话框 -->\n    <div class=\"chat-container\">\n      <h2>问问ChatGPT</h2>\n      <div class=\"chat-box\">\n        <div v-for=\"(message, index) in chatMessages\" :key=\"index\">\n          <p :class=\"message.sender\">{{ message.text }}</p>\n        </div>\n      </div>\n      \n      <div class=\"chat-input\">\n        <input\n          v-model=\"chatInput\"\n          type=\"text\"\n          placeholder=\"输入你的问题...\"\n          @keyup.enter=\"sendChatMessage\"\n        />\n        <button @click=\"sendChatMessage\">发送</button>\n      </div>\n    </div>\n\n    <!-- 添加一个底部 -->\n    <footer>\n      <p>©2023 Word Journeyman</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue';\nimport ContactUs from \"./components/ContactUs.vue\"; \n\nexport default {\n  components: {\n    \"contact-us\": ContactUs,\n  },\n  setup() {\n    const words = reactive([\n      { word: \"apple\", definition: \"一种常见的水果\" },\n      { word: \"banana\", definition: \"一种常见的黄色水果\" },\n      { word: \"cat\", definition: \"一种家养的小型猫科动物\" },\n    ]);\n    const currentWordIndex = ref(0);\n    const isDefinitionVisible = ref(false);\n    const searchTerm = ref(\"\");\n    const focusLostCountdown = ref(0);\n    const countdownInterval = ref(null);\n    const chatMessages = ref([]);\n    const chatInput = ref('');\n\n    const showDefinition = () => {\n      isDefinitionVisible.value = true;\n    };\n\n    const nextWord = () => {\n      currentWordIndex.value = (currentWordIndex.value + 1) % words.value.length;\n      isDefinitionVisible.value = false;\n    };\n\n    const searchWord = () => {\n      const index = words.value.findIndex(\n        (word) => word.word === searchTerm.value\n      );\n      if (index !== -1) {\n        currentWordIndex.value = index;\n        isDefinitionVisible.value = false;\n      } else {\n        alert(\"未找到该单词\");\n      }\n    };\n\n    const startCountdown = () => {\n      focusLostCountdown.value = 5;\n      countdownInterval.value = setInterval(() => {\n        if (focusLostCountdown.value > 0) {\n          focusLostCountdown.value--;\n        } else {\n          clearInterval(countdownInterval.value);\n        }\n      }, 1000);\n    };\n\n    const stopCountdown = () => {\n      clearInterval(countdownInterval.value);\n      focusLostCountdown.value = 0;\n    };\n\n    const sendChatMessage = async () => {\n      if (chatInput.value.trim()) {\n        chatMessages.value.push({ sender: \"user\", text: chatInput.value });\n\n        const response = await sendToChatbot(chatInput.value);\n        if (response) {\n          chatMessages.value.push({ sender: \"bot\", text: response });\n        }\n\n        chatInput.value = \"\";\n      }\n    };\n\n    // eslint-disable-next-line no-unused-vars\nconst sendToChatbot = async (message) => {\n  // 发送请求到聊天机器人API，并返回机器人的回应\n  // 这个函数需要你自己实现\n};\n\n\n\n    return {\n      words,\n      currentWordIndex,\n      isDefinitionVisible,\n      searchTerm,\n      focusLostCountdown,\n      chatMessages,\n      chatInput,\n      showDefinition,\n      nextWord,\n      searchWord,\n      startCountdown,\n      stopCountdown,\n      sendChatMessage\n    };\n  },\n};\n</script>\n\n<style scoped>\n@import url(\"../css/styles.css\");\n.chat-container {\n  margin-top: 2rem;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 1rem;\n  background-color: #fff;\n}\n\n.chat-box {\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 1rem;\n  margin-bottom: 1rem;\n}\n\n.chat-input {\n  display: flex;\n  justify-content: space-between;\n}\n\np.user {\n  color: #000;\n  text-align: right;\n}\n\np.bot {\n  color: #888;\n  text-align: left;\n}\n</style>\n"],"mappings":";AA6EA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,OAAOC,SAAQ,MAAO,4BAA4B;AAElD,eAAe;EACbC,UAAU,EAAE;IACV,YAAY,EAAED;EAChB,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC,CACrB;MAAEK,IAAI,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAU,CAAC,EACxC;MAAED,IAAI,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAY,CAAC,EAC3C;MAAED,IAAI,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAc,CAAC,CAC3C,CAAC;IACF,MAAMC,gBAAe,GAAIR,GAAG,CAAC,CAAC,CAAC;IAC/B,MAAMS,mBAAkB,GAAIT,GAAG,CAAC,KAAK,CAAC;IACtC,MAAMU,UAAS,GAAIV,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMW,kBAAiB,GAAIX,GAAG,CAAC,CAAC,CAAC;IACjC,MAAMY,iBAAgB,GAAIZ,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMa,YAAW,GAAIb,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMc,SAAQ,GAAId,GAAG,CAAC,EAAE,CAAC;IAEzB,MAAMe,cAAa,GAAIA,CAAA,KAAM;MAC3BN,mBAAmB,CAACO,KAAI,GAAI,IAAI;IAClC,CAAC;IAED,MAAMC,QAAO,GAAIA,CAAA,KAAM;MACrBT,gBAAgB,CAACQ,KAAI,GAAI,CAACR,gBAAgB,CAACQ,KAAI,GAAI,CAAC,IAAIX,KAAK,CAACW,KAAK,CAACE,MAAM;MAC1ET,mBAAmB,CAACO,KAAI,GAAI,KAAK;IACnC,CAAC;IAED,MAAMG,UAAS,GAAIA,CAAA,KAAM;MACvB,MAAMC,KAAI,GAAIf,KAAK,CAACW,KAAK,CAACK,SAAS,CAChCf,IAAI,IAAKA,IAAI,CAACA,IAAG,KAAMI,UAAU,CAACM,KACrC,CAAC;MACD,IAAII,KAAI,KAAM,CAAC,CAAC,EAAE;QAChBZ,gBAAgB,CAACQ,KAAI,GAAII,KAAK;QAC9BX,mBAAmB,CAACO,KAAI,GAAI,KAAK;MACnC,OAAO;QACLM,KAAK,CAAC,QAAQ,CAAC;MACjB;IACF,CAAC;IAED,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3BZ,kBAAkB,CAACK,KAAI,GAAI,CAAC;MAC5BJ,iBAAiB,CAACI,KAAI,GAAIQ,WAAW,CAAC,MAAM;QAC1C,IAAIb,kBAAkB,CAACK,KAAI,GAAI,CAAC,EAAE;UAChCL,kBAAkB,CAACK,KAAK,EAAE;QAC5B,OAAO;UACLS,aAAa,CAACb,iBAAiB,CAACI,KAAK,CAAC;QACxC;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,MAAMU,aAAY,GAAIA,CAAA,KAAM;MAC1BD,aAAa,CAACb,iBAAiB,CAACI,KAAK,CAAC;MACtCL,kBAAkB,CAACK,KAAI,GAAI,CAAC;IAC9B,CAAC;IAED,MAAMW,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAIb,SAAS,CAACE,KAAK,CAACY,IAAI,CAAC,CAAC,EAAE;QAC1Bf,YAAY,CAACG,KAAK,CAACa,IAAI,CAAC;UAAEC,MAAM,EAAE,MAAM;UAAEC,IAAI,EAAEjB,SAAS,CAACE;QAAM,CAAC,CAAC;QAElE,MAAMgB,QAAO,GAAI,MAAMC,aAAa,CAACnB,SAAS,CAACE,KAAK,CAAC;QACrD,IAAIgB,QAAQ,EAAE;UACZnB,YAAY,CAACG,KAAK,CAACa,IAAI,CAAC;YAAEC,MAAM,EAAE,KAAK;YAAEC,IAAI,EAAEC;UAAS,CAAC,CAAC;QAC5D;QAEAlB,SAAS,CAACE,KAAI,GAAI,EAAE;MACtB;IACF,CAAC;;IAED;IACJ,MAAMiB,aAAY,GAAI,MAAOC,OAAO,IAAK;MACvC;MACA;IAAA,CACD;IAIG,OAAO;MACL7B,KAAK;MACLG,gBAAgB;MAChBC,mBAAmB;MACnBC,UAAU;MACVC,kBAAkB;MAClBE,YAAY;MACZC,SAAS;MACTC,cAAc;MACdE,QAAQ;MACRE,UAAU;MACVI,cAAc;MACdG,aAAa;MACbC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}