{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa2e3d3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chat-box-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chat-box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"header-text\"\n}, \"Word Usage\", -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  class: \"chat-content\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"user-message\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"bot-message\"\n};\nconst _hoisted_8 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isChatOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"chat-header\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.isChatOpen = !$data.isChatOpen)\n  }, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"message\"\n    }, [message.sender === 'user' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(message.text), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(message.text), 1 /* TEXT */))]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userInput = $event),\n    placeholder: \"Type your message...\",\n    style: {\n      \"height\": \"100px\"\n    }\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    class: \"send-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")])])])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"chat-icon\",\n    onClick: _cache[3] || (_cache[3] = $event => $data.isChatOpen = !$data.isChatOpen)\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"comments\"\n  })]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","$data","isChatOpen","_hoisted_2","onClick","_cache","$event","_hoisted_5","_Fragment","_renderList","messages","message","index","key","sender","_hoisted_6","_toDisplayString","text","_hoisted_7","_hoisted_8","userInput","placeholder","style","args","$options","sendMessage","_createVNode","_component_font_awesome_icon","icon"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-box-container\">\r\n    <div v-if=\"isChatOpen\" class=\"chat-box\">\r\n      <div class=\"chat-header\" @click=\"isChatOpen = !isChatOpen\">\r\n        <h3 class=\"header-text\">Word Usage</h3>\r\n      </div>\r\n      <div class=\"chat-content\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\r\n          <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n            {{ message.text }}\r\n          </div>\r\n          <div v-else class=\"bot-message\">\r\n            {{ message.text }}\r\n          </div>\r\n        </div>\r\n        <div class=\"chat-input\">\r\n          <textarea\r\n            v-model=\"userInput\"\r\n            placeholder=\"Type your message...\"\r\n            style=\"height: 100px\"\r\n          ></textarea>\r\n          <button class=\"send-button\" @click=\"sendMessage\">Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"chat-icon\" @click=\"isChatOpen = !isChatOpen\">\r\n      <font-awesome-icon icon=\"comments\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInput: \"\",\r\n      isChatOpen: false,\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      this.messages.push({ sender: \"user\", text: this.userInput });\r\n      this.userInput = \"\";\r\n\r\n      this.$nextTick(() => {\r\n        // 滚动聊天框到底部\r\n        const chatContent = this.$el.querySelector(\".chat-content\");\r\n        chatContent.scrollTop = chatContent.scrollHeight;\r\n      });\r\n\r\n      // TODO: You should send the user's input to your chatbot and append the response to chat history\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style scoped>\r\n.chat-box-container {\r\n  position: fixed;\r\n  right: 20px;\r\n  bottom: 20px;\r\n  z-index: 1000;\r\n}\r\n\r\n.chat-box {\r\n  width: 400px;\r\n  height: 300px;\r\n  background-color: #f2f2f2;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-header {\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.header-text {\r\n  margin: 0;\r\n}\r\n\r\n.chat-content {\r\n  height: 210px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.user-message {\r\n  background-color: #eaf6ff;\r\n}\r\n\r\n.bot-message {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\ntextarea {\r\n  flex: 1;\r\n  height: 100px;\r\n  width: 280px;\r\n  margin-bottom: 10px;\r\n  resize: none;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  font-size: 14px;\r\n}\r\n\r\n.send-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 3px;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  margin-left: 10px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.send-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.chat-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-icon:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n@media (max-width: 400px) {\r\n  .chat-box {\r\n    width: 90%;\r\n  }\r\n}\r\n</style>\r\n  "],"mappings":";;;EACOA,KAAK,EAAC;AAAoB;;;EACNA,KAAK,EAAC;;gEAEzBC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAa,GAAC,YAAU;oBAAlCE,UAAuC,C;;EAEpCF,KAAK,EAAC;AAAc;;;EAEiBA,KAAK,EAAC;;;;EAGhCA,KAAK,EAAC;;;EAIfA,KAAK,EAAC;AAAY;;;uBAd7BG,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BOC,KAAA,CAAAC,UAAU,I,cAArBH,mBAAA,CAsBM,OAtBNI,UAsBM,GArBJN,mBAAA,CAEM;IAFDD,KAAK,EAAC,aAAa;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU;kBAGzDL,mBAAA,CAiBM,OAjBNU,UAiBM,I,kBAhBJR,mBAAA,CAOMS,SAAA,QAAAC,WAAA,CAP0BR,KAAA,CAAAS,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAA3Bb,mBAAA,CAOM;MAPqCc,GAAG,EAAED,KAAK;MAAEhB,KAAK,EAAC;QAChDe,OAAO,CAACG,MAAM,e,cAAzBf,mBAAA,CAEM,OAFNgB,UAEM,EAAAC,gBAAA,CADDL,OAAO,CAACM,IAAI,qB,cAEjBlB,mBAAA,CAEM,OAFNmB,UAEM,EAAAF,gBAAA,CADDL,OAAO,CAACM,IAAI,kB;kCAGnBpB,mBAAA,CAOM,OAPNsB,UAOM,G,gBANJtB,mBAAA,CAIY;+DAHDI,KAAA,CAAAmB,SAAS,GAAAd,MAAA;IAClBe,WAAW,EAAC,sBAAsB;IAClCC,KAAqB,EAArB;MAAA;IAAA;iDAFSrB,KAAA,CAAAmB,SAAS,E,GAIpBvB,mBAAA,CAA8D;IAAtDD,KAAK,EAAC,aAAa;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAkB,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,E,wBAI3DxB,mBAAA,CAEM;;IAFMH,KAAK,EAAC,WAAW;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU;MAC5DwB,YAAA,CAAqCC,4BAAA;IAAlBC,IAAI,EAAC;EAAU,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}