{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withModifiers as _withModifiers } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createBlock(_component_el_row, {\n    class: \"user-actions\"\n  }, {\n    default: _withCtx(() => [!$data.user ? (_openBlock(), _createBlock(_component_el_col, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[0] || (_cache[0] = $event => $data.showLogin = true)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"登录\")]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_button, {\n        onClick: _cache[1] || (_cache[1] = $event => $data.showRegister = true)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"注册\")]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_el_col, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"p\", null, \"欢迎，\" + _toDisplayString(this.email), 1 /* TEXT */), _createVNode(_component_el_button, {\n        onClick: $options.logout\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"退出\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })), _createVNode(_component_el_dialog, {\n      title: \"登录\",\n      modelValue: $data.showLogin,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.showLogin = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        onSubmit: _withModifiers($options.login, [\"prevent\"])\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"邮箱\",\n          error: $data.emailError\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.email,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.email = $event),\n            placeholder: \"邮箱\",\n            onInput: $options.validateEmail\n          }, null, 8 /* PROPS */, [\"modelValue\", \"onInput\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"error\"]), _createVNode(_component_el_form_item, {\n          label: \"密码\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.password,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.password = $event),\n            type: \"password\",\n            placeholder: \"密码\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            modelValue: $data.rememberMe,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.rememberMe = $event)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"记住我\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            \"native-type\": \"submit\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"登录\")]),\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onSubmit\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_dialog, {\n      title: \"注册\",\n      modelValue: $data.showRegister,\n      \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.showRegister = $event)\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        onSubmit: _withModifiers($options.register, [\"prevent\"])\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"邮箱\",\n          error: $data.emailError\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.email,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.email = $event),\n            placeholder: \"邮箱\",\n            onInput: $options.validateEmail\n          }, null, 8 /* PROPS */, [\"modelValue\", \"onInput\"]), _createVNode(_component_el_button, {\n            onClick: $options.sendVerificationCode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"发送验证码\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"onClick\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"error\"]), _createVNode(_component_el_form_item, {\n          label: \"密码\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.password,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.password = $event),\n            type: \"password\",\n            placeholder: \"密码\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"验证码\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $data.verificationCode,\n            \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.verificationCode = $event),\n            placeholder: \"验证码\"\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_checkbox, {\n            modelValue: $data.termsAccepted,\n            \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.termsAccepted = $event)\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"我已阅读并接受服务条款\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, null, {\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            \"native-type\": \"submit\",\n            disabled: !$data.termsAccepted || !$data.email || !$data.password || !$data.verificationCode\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"注册\")]),\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"disabled\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onSubmit\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_el_row","class","$data","user","_component_el_col","key","_createVNode","_component_el_button","onClick","_cache","$event","showLogin","showRegister","_createElementVNode","_toDisplayString","email","$options","logout","_component_el_dialog","title","_component_el_form","onSubmit","_withModifiers","login","_component_el_form_item","label","error","emailError","_component_el_input","placeholder","onInput","validateEmail","password","type","_component_el_checkbox","rememberMe","register","sendVerificationCode","verificationCode","termsAccepted","disabled"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\UserActions.vue"],"sourcesContent":["<template>\r\n  <el-row class=\"user-actions\">\r\n    <el-col v-if=\"!user\">\r\n      <el-button @click=\"showLogin = true\">登录</el-button>\r\n      <el-button @click=\"showRegister = true\">注册</el-button>\r\n    </el-col>\r\n    <el-col v-else>\r\n      <p>欢迎，{{ this.email }}</p>\r\n      <el-button @click=\"logout\">退出</el-button>\r\n    </el-col>\r\n\r\n    <el-dialog title=\"登录\" v-model=\"showLogin\">\r\n      <el-form @submit.prevent=\"login\">\r\n        <el-form-item label=\"邮箱\" :error=\"emailError\">\r\n          <el-input v-model=\"email\" placeholder=\"邮箱\" @input=\"validateEmail\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-checkbox v-model=\"rememberMe\">记住我</el-checkbox>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" native-type=\"submit\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"注册\" v-model=\"showRegister\">\r\n      <el-form @submit.prevent=\"register\">\r\n        <el-form-item label=\"邮箱\" :error=\"emailError\">\r\n          <el-input v-model=\"email\" placeholder=\"邮箱\" @input=\"validateEmail\" />\r\n          <el-button @click=\"sendVerificationCode\">发送验证码</el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\">\r\n          <el-input v-model=\"verificationCode\" placeholder=\"验证码\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-checkbox v-model=\"termsAccepted\"\r\n            >我已阅读并接受服务条款</el-checkbox\r\n          >\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            native-type=\"submit\"\r\n            :disabled=\"\r\n              !termsAccepted || !email || !password || !verificationCode\r\n            \"\r\n            >注册</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showLogin: false,\r\n      showRegister: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      verificationCode: \"\",\r\n      user: null,\r\n      emailError: \"\",\r\n      rememberMe: false,\r\n      termsAccepted: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async sendVerificationCode() {\r\n      try {\r\n        await axios.post(\"http://localhost:5400/register\", {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n        this.$message.success(\"Verification code sent successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error sending verification code:\", error);\r\n        this.$message.error(\"Email already registered\");\r\n      }\r\n    },\r\n    validateEmail() {\r\n      const re = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\r\n      if (!re.test(this.email)) {\r\n        this.emailError = \"请输入有效的电子邮件地址\";\r\n      } else {\r\n        this.emailError = \"\";\r\n      }\r\n    },\r\n    login(event) {\r\n      event.preventDefault();\r\n\r\n      axios\r\n        .post(\"http://localhost:5400/login\", {\r\n          email: this.email,\r\n          password: this.password,\r\n          rememberMe: this.rememberMe,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.message == \"Logged in successfully\") {\r\n            this.user = this.email;\r\n            this.showLogin = false;\r\n          } else {\r\n            this.$message.error(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error logging in:\", error);\r\n          this.$message.error(this.$message);\r\n        });\r\n    },\r\n    register(event) {\r\n      event.preventDefault();\r\n\r\n      axios\r\n        .post(\"http://localhost:5400/verify\", {\r\n          email: this.email,\r\n          password: this.password,\r\n          verification_code: this.verificationCode,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.message == \"User registered successfully\") {\r\n            this.user = this.email;\r\n            this.showRegister = false;\r\n            this.$message.success(\"User registered successfully\");\r\n          } else {\r\n            this.$message.error(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error verifying account:\", error);\r\n          this.$message.error(\"Error verifying account\");\r\n        });\r\n    },\r\n    logout() {\r\n      this.user = null;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}