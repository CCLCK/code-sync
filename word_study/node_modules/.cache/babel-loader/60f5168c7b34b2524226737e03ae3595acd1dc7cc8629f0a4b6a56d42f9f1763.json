{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      userInput: \"\",\n      isChatOpen: false,\n      messages: []\n    };\n  },\n  methods: {\n    async sendMessage() {\n      if (this.userInput.trim() === \"\") {\n        return; // 用户输入为空，不执行任何操作\n      }\n\n      // 将连续的换行替换为一个换行\n      this.userInput = this.userInput.replace(/\\n\\s*\\n/g, \"\\n\");\n      this.messages.push({\n        sender: \"user\",\n        text: this.userInput\n      });\n      const userInput = this.userInput;\n      this.userInput = \"\";\n      try {\n        const response = await axios.post(\"http://localhost:5200/api/chat\", {\n          message: userInput\n        });\n        this.messages.push({\n          sender: \"bot\",\n          text: response.data.message\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userInput","isChatOpen","messages","methods","sendMessage","trim","replace","push","sender","text","response","post","message","error","console"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"chat-box-container\">\r\n    <el-main>\r\n      <el-header class=\"chat-header\" @click=\"isChatOpen = !isChatOpen\">\r\n        <h3 class=\"header-text\">Word Usage</h3>\r\n      </el-header>\r\n      <el-scrollbar class=\"chat-content\" v-if=\"isChatOpen\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\r\n          <el-card v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n            {{ message.text }}\r\n          </el-card>\r\n          <el-card v-else class=\"bot-message\">\r\n            {{ message.text }}\r\n          </el-card>\r\n        </div>\r\n      </el-scrollbar>\r\n    </el-main>\r\n    <el-footer class=\"chat-input\" v-if=\"isChatOpen\">\r\n      <el-input\r\n        v-model=\"userInput\"\r\n        type=\"textarea\"\r\n        :rows=\"2\"\r\n        auto-complete=\"off\"\r\n        placeholder=\"Type your message...\"\r\n        @keydown.enter.exact.prevent=\"sendMessage\"\r\n      ></el-input>\r\n      <el-button type=\"primary\" @click=\"sendMessage\">Send</el-button>\r\n    </el-footer>\r\n    <div v-else class=\"chat-icon\" @click=\"isChatOpen = !isChatOpen\">\r\n      <i class=\"el-icon-message-solid\"></i>\r\n    </div>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInput: \"\",\r\n      isChatOpen: false,\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async sendMessage() {\r\n      if (this.userInput.trim() === \"\") {\r\n        return; // 用户输入为空，不执行任何操作\r\n      }\r\n\r\n      // 将连续的换行替换为一个换行\r\n      this.userInput = this.userInput.replace(/\\n\\s*\\n/g, \"\\n\");\r\n\r\n      this.messages.push({ sender: \"user\", text: this.userInput });\r\n      const userInput = this.userInput;\r\n      this.userInput = \"\";\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5200/api/chat\", { message: userInput });\r\n        this.messages.push({ sender: \"bot\", text: response.data.message });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"element-ui/lib/theme-chalk/index.css\");\r\n\r\n.chat-box-container {\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 80px;\r\n  width: 300px;\r\n  height: 500px;\r\n  z-index: 1000;\r\n}\r\n\r\n.chat-header {\r\n  background-color: #409eff;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n.header-text {\r\n  margin: 0;\r\n}\r\n\r\n.chat-content {\r\n  height: 360px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-message,\r\n.bot-message {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-message {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.bot-message {\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.chat-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";AAmCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACJ,SAAS,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;QAChC,OAAM,CAAE;MACV;;MAEA;MACA,IAAI,CAACL,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACM,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC;MAEzD,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAAC;QAAEC,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAE,IAAI,CAACT;MAAU,CAAC,CAAC;MAC5D,MAAMA,SAAQ,GAAI,IAAI,CAACA,SAAS;MAChC,IAAI,CAACA,SAAQ,GAAI,EAAE;MAEnB,IAAI;QACF,MAAMU,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,gCAAgC,EAAE;UAAEC,OAAO,EAAEZ;QAAU,CAAC,CAAC;QAC3F,IAAI,CAACE,QAAQ,CAACK,IAAI,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,IAAI,EAAEC,QAAQ,CAACX,IAAI,CAACa;QAAQ,CAAC,CAAC;MACpE,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}