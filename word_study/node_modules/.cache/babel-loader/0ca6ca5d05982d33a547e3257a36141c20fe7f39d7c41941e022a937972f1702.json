{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      showLogin: false,\n      showRegister: false,\n      email: \"\",\n      password: \"\",\n      verificationCode: \"\",\n      user: null,\n      emailError: \"\",\n      rememberMe: false,\n      termsAccepted: false\n    };\n  },\n  methods: {\n    async sendVerificationCode() {\n      try {\n        await axios.post(\"http://localhost:5400/register\", {\n          email: this.email,\n          password: this.password\n        });\n        this.$message.success(\"Verification code sent successfully\");\n      } catch (error) {\n        console.error(\"Error sending verification code:\", error);\n        this.$message.error(\"Email already registered\");\n      }\n    },\n    validateEmail() {\n      const re = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n      if (!re.test(this.email)) {\n        this.emailError = \"请输入有效的电子邮件地址\";\n      } else {\n        this.emailError = \"\";\n      }\n    },\n    login(event) {\n      event.preventDefault();\n      axios.post(\"http://localhost:5400/login\", {\n        email: this.email,\n        password: this.password,\n        rememberMe: this.rememberMe\n      }).then(response => {\n        if (response.data.message == \"Logged in successfully\") {\n          this.user = this.email;\n          this.showLogin = false;\n          localStorage.setItem('user_id', response.data.user_id);\n        } else {\n          this.$message.error(response.data.message);\n        }\n      }).catch(error => {\n        console.error(\"Error logging in:\", error);\n        this.$message.error(error.response.data);\n      });\n    },\n    register(event) {\n      event.preventDefault();\n      axios.post(\"http://localhost:5400/verify\", {\n        email: this.email,\n        password: this.password,\n        verification_code: this.verificationCode\n      }).then(response => {\n        if (response.data.message == \"User registered successfully\") {\n          this.user = this.email;\n          this.showRegister = false;\n          this.$message.success(\"User registered successfully\");\n        } else {\n          this.$message.error(response.data.message);\n        }\n      }).catch(error => {\n        console.error(\"Error verifying account:\", error);\n        this.$message.error(\"Error verifying account\");\n      });\n    },\n    logout() {\n      this.user = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","showLogin","showRegister","email","password","verificationCode","user","emailError","rememberMe","termsAccepted","methods","sendVerificationCode","post","$message","success","error","console","validateEmail","re","test","login","event","preventDefault","then","response","message","localStorage","setItem","user_id","catch","register","verification_code","logout"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\UserActions.vue"],"sourcesContent":["<template>\r\n  <el-row class=\"user-actions\">\r\n    <el-col v-if=\"!user\">\r\n      <el-button @click=\"showLogin = true\">登录</el-button>\r\n      <el-button @click=\"showRegister = true\">注册</el-button>\r\n    </el-col>\r\n    <el-col v-else>\r\n      <p>欢迎，{{ this.email }}</p>\r\n      <el-button @click=\"logout\">退出</el-button>\r\n    </el-col>\r\n\r\n    <el-dialog title=\"登录\" v-model=\"showLogin\">\r\n      <el-form @submit.prevent=\"login\">\r\n        <el-form-item label=\"邮箱\" :error=\"emailError\">\r\n          <el-input v-model=\"email\" placeholder=\"邮箱\" @input=\"validateEmail\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-checkbox v-model=\"rememberMe\">记住我</el-checkbox>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" native-type=\"submit\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"注册\" v-model=\"showRegister\">\r\n      <el-form @submit.prevent=\"register\">\r\n        <el-form-item label=\"邮箱\" :error=\"emailError\">\r\n          <el-input v-model=\"email\" placeholder=\"邮箱\" @input=\"validateEmail\" />\r\n          \r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input v-model=\"password\" type=\"password\" placeholder=\"密码\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\">\r\n          <el-input v-model=\"verificationCode\" placeholder=\"验证码\" />\r\n          <el-button @click=\"sendVerificationCode\">发送验证码</el-button>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-checkbox v-model=\"termsAccepted\"\r\n            >我已阅读并接受服务条款</el-checkbox\r\n          >\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            native-type=\"submit\"\r\n            :disabled=\"\r\n              !termsAccepted || !email || !password || !verificationCode\r\n            \"\r\n            >注册</el-button\r\n          >\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      showLogin: false,\r\n      showRegister: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      verificationCode: \"\",\r\n      user: null,\r\n      emailError: \"\",\r\n      rememberMe: false,\r\n      termsAccepted: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async sendVerificationCode() {\r\n      try {\r\n        await axios.post(\"http://localhost:5400/register\", {\r\n          email: this.email,\r\n          password: this.password,\r\n        });\r\n        this.$message.success(\"Verification code sent successfully\");\r\n      } catch (error) {\r\n        console.error(\"Error sending verification code:\", error);\r\n        this.$message.error(\"Email already registered\");\r\n      }\r\n    },\r\n    validateEmail() {\r\n      const re = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\r\n      if (!re.test(this.email)) {\r\n        this.emailError = \"请输入有效的电子邮件地址\";\r\n      } else {\r\n        this.emailError = \"\";\r\n      }\r\n    },\r\n    login(event) {\r\n      event.preventDefault();\r\n\r\n      axios\r\n        .post(\"http://localhost:5400/login\", {\r\n          email: this.email,\r\n          password: this.password,\r\n          rememberMe: this.rememberMe,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.message == \"Logged in successfully\") {\r\n            this.user = this.email;\r\n            this.showLogin = false;\r\n            localStorage.setItem('user_id', response.data.user_id);\r\n          } else {\r\n            this.$message.error(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error logging in:\", error);\r\n          this.$message.error(error.response.data);\r\n        });\r\n    },\r\n    register(event) {\r\n      event.preventDefault();\r\n\r\n      axios\r\n        .post(\"http://localhost:5400/verify\", {\r\n          email: this.email,\r\n          password: this.password,\r\n          verification_code: this.verificationCode,\r\n        })\r\n        .then((response) => {\r\n          if (response.data.message == \"User registered successfully\") {\r\n            this.user = this.email;\r\n            this.showRegister = false;\r\n            this.$message.success(\"User registered successfully\");\r\n          } else {\r\n            this.$message.error(response.data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error verifying account:\", error);\r\n          this.$message.error(\"Error verifying account\");\r\n        });\r\n    },\r\n    logout() {\r\n      this.user = null;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}