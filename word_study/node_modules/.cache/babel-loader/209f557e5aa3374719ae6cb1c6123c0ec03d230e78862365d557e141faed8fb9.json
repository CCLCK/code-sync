{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Word Journeyman\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"user-actions-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"#\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"sidebar\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"单词探索历程\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  class: \"center-container\"\n};\nconst _hoisted_9 = {\n  class: \"search-bar\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"loading-wrap\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"balls\"\n}, [/*#__PURE__*/_createElementVNode(\"div\"), /*#__PURE__*/_createElementVNode(\"div\"), /*#__PURE__*/_createElementVNode(\"div\")], -1 /* HOISTED */));\nconst _hoisted_12 = [_hoisted_11];\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"footer\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"©2023 Word Journeyman\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_user_actions = _resolveComponent(\"user-actions\");\n  const _component_contact_us = _resolveComponent(\"contact-us\");\n  const _component_word_card = _resolveComponent(\"word-card\");\n  const _component_refresh_button = _resolveComponent(\"refresh-button\");\n  const _component_chat_box = _resolveComponent(\"chat-box\");\n  const _component_word_notebook = _resolveComponent(\"word-notebook\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 添加一个头部 \"), _createElementVNode(\"header\", null, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_user_actions), _createCommentVNode(\" 放在容器内 \")]), _createElementVNode(\"nav\", null, [_hoisted_4, _createVNode(_component_contact_us)])]), _createCommentVNode(\" 添加侧边栏 \"), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.browsedWords, word => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: word,\n      onClick: $event => $options.jumpToWord(word)\n    }, _toDisplayString(word), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_8, [_createCommentVNode(\" 搜索栏 \"), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchTerm = $event),\n    type: \"text\",\n    placeholder: \"搜索单词...\",\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.searchWord && $options.searchWord(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.searchTerm]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.searchWord && $options.searchWord(...args))\n  }, \"搜索\"), _createElementVNode(\"p\", null, _toDisplayString(_ctx.searchMessage), 1 /* TEXT */), _createCommentVNode(\" 新增一行来显示searchMessage \")]), $data.words.length > 0 ? (_openBlock(), _createBlock(_component_word_card, {\n    key: 0,\n    word: $data.words[$data.currentWordIndex],\n    isDefinitionVisible: $data.isDefinitionVisible,\n    showDefinition: $options.showDefinition,\n    nextWord: $options.nextWord,\n    startCountdown: $options.startCountdown,\n    stopCountdown: $options.stopCountdown,\n    focusLostCountdown: $data.focusLostCountdown,\n    onAddWordToNotebook: $options.addWordToNotebook\n  }, null, 8 /* PROPS */, [\"word\", \"isDefinitionVisible\", \"showDefinition\", \"nextWord\", \"startCountdown\", \"stopCountdown\", \"focusLostCountdown\", \"onAddWordToNotebook\"])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _hoisted_12)), _createVNode(_component_refresh_button, {\n    class: \"refresh-button\",\n    onRefresh: $options.getNewWords\n  }, null, 8 /* PROPS */, [\"onRefresh\"]), _createCommentVNode(\" 聊天框组件 \"), _createVNode(_component_chat_box), _createElementVNode(\"button\", {\n    class: \"sidebar-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.toggleNotebookVisibility && $options.toggleNotebookVisibility(...args))\n  }, \"Toggle Word Notebook\"), _createVNode(_component_word_notebook, {\n    words: $data.notebookWords,\n    isVisible: $data.isNotebookVisible,\n    onRemoveWord: $options.removeWordFromNotebook,\n    onToggleVisibility: $options.toggleNotebookVisibility\n  }, null, 8 /* PROPS */, [\"words\", \"isVisible\", \"onRemoveWord\", \"onToggleVisibility\"])]), _createCommentVNode(\" 添加一个底部 \"), _hoisted_13]);\n}","map":{"version":3,"names":["id","_createElementVNode","class","href","_hoisted_11","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_hoisted_3","_createVNode","_component_user_actions","_hoisted_4","_component_contact_us","_hoisted_5","_hoisted_6","_Fragment","_renderList","$data","browsedWords","word","key","onClick","$event","$options","jumpToWord","_hoisted_7","_hoisted_8","_hoisted_9","searchTerm","type","placeholder","onKeyup","_cache","_withKeys","args","searchWord","_toDisplayString","_ctx","searchMessage","words","length","_createBlock","_component_word_card","currentWordIndex","isDefinitionVisible","showDefinition","nextWord","startCountdown","stopCountdown","focusLostCountdown","onAddWordToNotebook","addWordToNotebook","_hoisted_10","_hoisted_12","_component_refresh_button","onRefresh","getNewWords","_component_chat_box","toggleNotebookVisibility","_component_word_notebook","notebookWords","isVisible","isNotebookVisible","onRemoveWord","removeWordFromNotebook","onToggleVisibility","_hoisted_13"],"sources":["H:\\单词学习项目\\word_study\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <!-- 添加一个头部 -->\r\n    <header>\r\n      <h1>Word Journeyman</h1>\r\n      <div class=\"user-actions-container\">\r\n        <user-actions></user-actions> <!-- 放在容器内 -->\r\n      </div>\r\n      <nav>\r\n        <a href=\"#\"></a>\r\n        <contact-us></contact-us>\r\n      </nav>\r\n    </header>\r\n\r\n    <!-- 添加侧边栏 -->\r\n    <div class=\"sidebar\">\r\n      <h2>单词探索历程</h2>\r\n      <ul>\r\n        <li v-for=\"word in browsedWords\" :key=\"word\" @click=\"jumpToWord(word)\">\r\n          {{ word }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"center-container\">\r\n      <!-- 搜索栏 -->\r\n      <div class=\"search-bar\">\r\n        <input\r\n          v-model=\"searchTerm\"\r\n          type=\"text\"\r\n          placeholder=\"搜索单词...\"\r\n          @keyup.enter=\"searchWord\"\r\n        />\r\n        <button @click=\"searchWord\">搜索</button>\r\n        <p>{{ searchMessage }}</p>\r\n        <!-- 新增一行来显示searchMessage -->\r\n      </div>\r\n      <word-card\r\n  v-if=\"words.length > 0\"\r\n  :word=\"words[currentWordIndex]\"\r\n  :isDefinitionVisible=\"isDefinitionVisible\"\r\n  :showDefinition=\"showDefinition\"\r\n  :nextWord=\"nextWord\"\r\n  :startCountdown=\"startCountdown\"\r\n  :stopCountdown=\"stopCountdown\"\r\n  :focusLostCountdown=\"focusLostCountdown\"\r\n  @add-word-to-notebook=\"addWordToNotebook\"\r\n>\r\n</word-card>\r\n\r\n<div v-else class=\"loading-wrap\" >\r\n  <div class=\"balls\">\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n</div>\r\n\r\n\r\n  <refresh-button\r\n        class=\"refresh-button\"\r\n        @refresh=\"getNewWords\"\r\n      ></refresh-button>\r\n\r\n\r\n      \r\n      \r\n      <!-- 聊天框组件 -->\r\n      <chat-box></chat-box>\r\n\r\n      <button class=\"sidebar-button\" @click=\"toggleNotebookVisibility\">Toggle Word Notebook</button>\r\n      <word-notebook\r\n      :words=\"notebookWords\"\r\n      :isVisible=\"isNotebookVisible\"\r\n      @remove-word=\"removeWordFromNotebook\"\r\n      @toggle-visibility=\"toggleNotebookVisibility\"\r\n    ></word-notebook>\r\n    </div>\r\n\r\n    <!-- 添加一个底部 -->\r\n    <footer>\r\n      <p>©2023 Word Journeyman</p>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport UserActions from './components/UserActions.vue'\r\nimport ContactUs from \"./components/ContactUs.vue\"; // 确保这里的路径是正确的\r\nimport ChatBox from \"./components/ChatBox.vue\"; // 引入你的聊天框组件\r\nimport RefreshButton from \"./components/RefreshButton.vue\";\r\nimport axios from \"axios\";\r\nimport WordCard from \"./components/WordCard.vue\";\r\nimport WordNotebook from \"./components/WordNotebook.vue\";\r\nexport default {\r\n  components: {\r\n    \"contact-us\": ContactUs, // 在这里注册你的组件\r\n    \"chat-box\": ChatBox, // 注册你的聊天框组件\r\n    RefreshButton,\r\n    WordCard,\r\n    WordNotebook,\r\n    \"user-actions\":UserActions\r\n  },\r\n  data() {\r\n    return {\r\n      words: [],\r\n      currentWordIndex: 0,\r\n      isDefinitionVisible: false,\r\n      searchTerm: \"\",\r\n      focusLostCountdown: 0,\r\n      countdownInterval: null, // 新增一个变量来存储倒计时的interval\r\n      browsedWords: [], // 新增一个变量来存储已浏览的单词\r\n      newWords: [], // 新的一组单词\r\n      isNotebookVisible: false,\r\n      notebookWords: [], // 生词本中的单词\r\n     \r\n     \r\n    };\r\n  },\r\n  created() {\r\n    const word = this.$route.params.word;\r\n    if (word) {\r\n      this.jumpToWord(word);\r\n    }\r\n    axios\r\n      .get(\"http://localhost:5300/random-words\")\r\n      .then((response) => {\r\n        this.words = response.data;\r\n        \r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching random words:\", error);\r\n       \r\n      });\r\n  },\r\n  methods: {\r\n    toggleNotebookVisibility() {\r\n      this.isNotebookVisible = !this.isNotebookVisible;\r\n    },\r\n    removeWordFromNotebook(index) {\r\n  this.notebookWords.splice(index, 1);\r\n},\r\n\r\n    addWordToNotebook() {\r\n      console.log(1);\r\n    const currentWord = this.words[this.currentWordIndex].word;\r\n    if (!this.notebookWords.includes(currentWord)) {\r\n      // 如果当前单词不在生词本中，就添加到列表\r\n      this.notebookWords.push(currentWord);\r\n    }\r\n  },\r\n    showDefinition() {\r\n      this.isDefinitionVisible = true;\r\n    },\r\n    fetchWord(word, showDefinitionImmediately = false) {\r\n      axios\r\n        .get(`http://localhost:5100/words/${word}`)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          const index = this.words.findIndex((w) => w.word === word);\r\n          if (index >= 0) {\r\n            this.words[index].definition = response.data.definition;\r\n            this.words[index].example = response.data.example;\r\n            this.words[index].example_translation =\r\n              response.data.example_translation; // 新增的例句翻译\r\n\r\n            this.currentWordIndex = index;\r\n          } else {\r\n            this.words.push({\r\n              word: response.data.word,\r\n              definition: response.data.definition,\r\n              example: response.data.example,\r\n              example_translation: response.data.example_translation, // 新增的例句翻译\r\n            });\r\n            this.currentWordIndex = this.words.length - 1;\r\n          }\r\n\r\n          // console.log(this.words[index].word);\r\n          // console.log(response.data.word);\r\n          console.log(response.data);\r\n          console.log(showDefinitionImmediately);\r\n          // Only show definition if we got a valid response and we should show definition immediately.\r\n          if (\r\n            response.data &&\r\n            response.data.word &&\r\n            showDefinitionImmediately\r\n          ) {\r\n            this.showDefinition(); // 显示搜索到的单词定义\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching word:\", error);\r\n        });\r\n    },\r\n\r\n    searchWord() {\r\n      this.fetchWord(this.searchTerm, true); // Search should show definition immediately\r\n    },\r\n\r\n    nextWord() {\r\n      \r\n      const currentWord = this.words[this.currentWordIndex].word;\r\n      if (!this.browsedWords.includes(currentWord)) {\r\n        // 如果当前单词不在已浏览单词列表中，就添加到列表\r\n        this.browsedWords.push(currentWord);\r\n      }\r\n      this.currentWordIndex = (this.currentWordIndex + 1) % this.words.length;\r\n      this.isDefinitionVisible = false;\r\n      this.$router.push(`/words/${this.words[this.currentWordIndex].word}`);\r\n      this.fetchWord(this.words[this.currentWordIndex].word); // 'Next' should not show definition immediately\r\n    },\r\n\r\n    // ...\r\n\r\n    jumpToWord(word) {\r\n      const index = this.words.findIndex((w) => w.word === word);\r\n      if (index !== -1) {\r\n        this.currentWordIndex = index;\r\n      }\r\n      this.$router.push(`/words/${word}`);\r\n      this.fetchWord(word);\r\n    },\r\n\r\n    startCountdown() {\r\n      this.focusLostCountdown = 5;\r\n      this.countdownInterval = setInterval(() => {\r\n        if (this.focusLostCountdown > 0) {\r\n          this.focusLostCountdown--;\r\n        } else {\r\n          clearInterval(this.countdownInterval);\r\n        }\r\n      }, 1000);\r\n    },\r\n    stopCountdown() {\r\n      clearInterval(this.countdownInterval);\r\n      this.focusLostCountdown = 0;\r\n    },\r\n\r\n    getNewWords() {\r\n     \r\n      this.words = [];  // 清空单词列表\r\n      axios\r\n        .get(\"http://localhost:5300/random-words\")\r\n        .then((response) => {\r\n          this.newWords = response.data;\r\n          this.words = this.newWords; // 更新单词列表\r\n           \r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching new words:\", error);\r\n          \r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n@import url(\"../css/loading.css\");\r\n@import url(\"../css/styles.css\");\r\n@import url(\"../css/notebook-button.css\");\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}