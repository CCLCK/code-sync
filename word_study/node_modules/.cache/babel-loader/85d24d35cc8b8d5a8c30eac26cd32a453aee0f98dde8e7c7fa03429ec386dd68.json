{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa2e3d3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chat-box-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"chat-box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"header-text\"\n}, \"Word Usage\", -1 /* HOISTED */));\nconst _hoisted_4 = [_hoisted_3];\nconst _hoisted_5 = {\n  class: \"chat-content\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"user-message\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"bot-message\"\n};\nconst _hoisted_8 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.isChatOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"chat-header\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.isChatOpen = !$data.isChatOpen)\n  }, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"message\"\n    }, [message.sender === 'user' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"pre\", null, _toDisplayString(message.text), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"pre\", null, _toDisplayString(message.text), 1 /* TEXT */)]))]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userInput = $event),\n    placeholder: \"Type your message...\",\n    onKeydown: [_cache[2] || (_cache[2] = _withKeys(_withModifiers((...args) => $options.handleEnterKey && $options.handleEnterKey(...args), [\"exact\", \"prevent\"]), [\"enter\"])), _cache[3] || (_cache[3] = _withKeys(_withModifiers((...args) => $options.handleShiftEnterKey && $options.handleShiftEnterKey(...args), [\"exact\", \"shift\"]), [\"enter\"]))]\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    class: \"send-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")])])) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"chat-icon\",\n    onClick: _cache[5] || (_cache[5] = $event => $data.isChatOpen = !$data.isChatOpen)\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"comments\"\n  })]))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_3","_createElementBlock","_hoisted_1","$data","isChatOpen","_hoisted_2","onClick","_cache","$event","_hoisted_5","_Fragment","_renderList","messages","message","index","key","sender","_hoisted_6","_toDisplayString","text","_hoisted_7","_hoisted_8","userInput","placeholder","onKeydown","$options","handleEnterKey","args","handleShiftEnterKey","sendMessage","_createVNode","_component_font_awesome_icon","icon"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n    \r\n  <div class=\"chat-box-container\">\r\n    \r\n    <div v-if=\"isChatOpen\" class=\"chat-box\">\r\n      <div class=\"chat-header\" @click=\"isChatOpen = !isChatOpen\">\r\n        <h3 class=\"header-text\">Word Usage</h3>\r\n      </div>\r\n      <div class=\"chat-content\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\r\n          <div v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n            <pre>{{ message.text }}</pre>\r\n          </div>\r\n          <div v-else class=\"bot-message\">\r\n            <pre>{{ message.text }}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-input\">\r\n        <textarea\r\n          v-model=\"userInput\"\r\n          placeholder=\"Type your message...\"\r\n          @keydown.enter.exact.prevent=\"handleEnterKey\"\r\n          @keydown.enter.exact.shift=\"handleShiftEnterKey\"\r\n        ></textarea>\r\n        <button class=\"send-button\" @click=\"sendMessage\">Send</button>\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"chat-icon\" @click=\"isChatOpen = !isChatOpen\">\r\n      <font-awesome-icon icon=\"comments\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInput: \"\",\r\n      isChatOpen: false,\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      if (this.userInput.trim() === \"\") {\r\n        return; // 用户输入为空，不执行任何操作\r\n      }\r\n\r\n      // 将连续的换行替换为一个换行\r\n      this.userInput = this.userInput.replace(/\\n\\s*\\n/g, \"\\n\");\r\n\r\n      this.messages.push({ sender: \"user\", text: this.userInput });\r\n      const userInput = this.userInput;\r\n      this.userInput = \"\";\r\n\r\n      // 滚动聊天框到底部\r\n      const chatContent = this.$el.querySelector(\".chat-content\");\r\n      chatContent.scrollTop = chatContent.scrollHeight;\r\n\r\n      // 发送请求到Flask服务器\r\n      axios\r\n        .post(\"http://localhost:5000/api/chat\", { message: userInput })\r\n        .then((response) => {\r\n          // 服务器响应成功\r\n          this.messages.push({ sender: \"bot\", text: response.data.message });\r\n\r\n          this.$nextTick(() => {\r\n            // 再次滚动聊天框到底部\r\n            chatContent.scrollTop = chatContent.scrollHeight;\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          // 处理错误\r\n          console.error(error);\r\n        });\r\n    },\r\n\r\n    handleEnterKey(event) {\r\n      if (!event.shiftKey) {\r\n        event.preventDefault();\r\n        this.sendMessage();\r\n      }\r\n    },\r\n    handleShiftEnterKey(event) {\r\n      if (event.shiftKey) {\r\n        event.preventDefault();\r\n        this.userInput += \"\\n\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style scoped>\r\n\r\n  \r\n.chat-box-container {\r\n  position: fixed;\r\n  right: 0px;\r\n  bottom: 80px; /* 调整适应右边的位置 */\r\n  z-index: 1000;\r\n}\r\n\r\n.chat-box {\r\n  height: calc(100vh - 200px);\r\n\r\n  bottom: 0;\r\n  width: 400px;\r\n  background-color: #f2f2f2;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  right: 0; /* 调整聊天框靠右对齐 */\r\n  left: unset; /* 移除左对齐属性 */\r\n}\r\n\r\n.chat-header {\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 5px;\r\n  text-align: center;\r\n}\r\n\r\n.header-text {\r\n  margin: 0;\r\n  font-family: \"Helvetica Neue\", Arial, sans-serif;\r\n  font-size: 16px;\r\n}\r\n.chat-content {\r\n    height: 100%;\r\n    overflow-y: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .message {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 15px;\r\n    max-width: 80%;\r\n  }\r\n  \r\n  .user-message,\r\n  .bot-message {\r\n    position: relative;\r\n    margin-bottom: 10px;\r\n    padding: 2px 3px;\r\n    border-radius: 10px;\r\n    max-width: 80%;\r\n    font-size: 14px;\r\n    font-family: \"Microsoft YaHei\", sans-serif;\r\n  }\r\n  \r\n  .user-message {\r\n    align-self: flex-end;\r\n    background: linear-gradient(135deg, #ff9aa2 0%, #ffafc5 100%);\r\n    color: white;\r\n    margin-left: 20%;\r\n  }\r\n  \r\n  .user-message::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    right: -8px;\r\n    border-width: 8px 8px 8px 0;\r\n    border-style: solid;\r\n    border-color: transparent #ff9aa2 transparent transparent;\r\n  }\r\n  \r\n  .bot-message {\r\n    align-self: flex-start;\r\n    background: linear-gradient(135deg, #fce0e6 0%, #ffeffa 100%);\r\n    color: #333;\r\n    margin-right: 20%;\r\n  }\r\n  \r\n  .bot-message::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: -8px;\r\n    border-width: 8px 0 8px 8px;\r\n    border-style: solid;\r\n    border-color: transparent transparent transparent #fce0e6;\r\n  }\r\n  \r\n  \r\n  \r\n\r\n.chat-input {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\ntextarea {\r\n  flex: 1;\r\n  height: 100px;\r\n  width: 280px;\r\n  margin-bottom: 10px;\r\n  resize: none;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 3px;\r\n  font-family: Arial, sans-serif;\r\n  font-size: 14px;\r\n}\r\n\r\n\r\n\r\n.chat-icon {\r\n  width: 40px;\r\n  height: 40px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chat-icon:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n@media (max-width: 400px) {\r\n  .chat-box {\r\n    \r\n    width: 40%;\r\n   \r\n  }\r\n}\r\n\r\n.chat-input .send-button {\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 3px;\r\n    padding: 8px 15px;\r\n    font-family: Arial, sans-serif;\r\n    font-size: 14px;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .send-button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n</style>\r\n  "],"mappings":";;;EAEOA,KAAK,EAAC;AAAoB;;;EAENA,KAAK,EAAC;;gEAEzBC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAa,GAAC,YAAU;oBAAlCE,UAAuC,C;;EAEpCF,KAAK,EAAC;AAAc;;;EAEiBA,KAAK,EAAC;;;;EAGhCA,KAAK,EAAC;;;EAKjBA,KAAK,EAAC;AAAY;;;uBAhB3BG,mBAAA,CA6BM,OA7BNC,UA6BM,GA3BOC,KAAA,CAAAC,UAAU,I,cAArBH,mBAAA,CAuBM,OAvBNI,UAuBM,GAtBJN,mBAAA,CAEM;IAFDD,KAAK,EAAC,aAAa;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU;kBAGzDL,mBAAA,CASM,OATNU,UASM,I,kBARJR,mBAAA,CAOMS,SAAA,QAAAC,WAAA,CAP0BR,KAAA,CAAAS,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBAA3Bb,mBAAA,CAOM;MAPqCc,GAAG,EAAED,KAAK;MAAEhB,KAAK,EAAC;QAChDe,OAAO,CAACG,MAAM,e,cAAzBf,mBAAA,CAEM,OAFNgB,UAEM,GADJlB,mBAAA,CAA6B,aAAAmB,gBAAA,CAArBL,OAAO,CAACM,IAAI,iB,oBAEtBlB,mBAAA,CAEM,OAFNmB,UAEM,GADJrB,mBAAA,CAA6B,aAAAmB,gBAAA,CAArBL,OAAO,CAACM,IAAI,iB;oCAI1BpB,mBAAA,CAQM,OARNsB,UAQM,G,gBAPJtB,mBAAA,CAKY;+DAJDI,KAAA,CAAAmB,SAAS,GAAAd,MAAA;IAClBe,WAAW,EAAC,sBAAsB;IACjCC,SAAO,G,gEAAsBC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAC,IAAA,CAAc,sC,gEAChBF,QAAA,CAAAG,mBAAA,IAAAH,QAAA,CAAAG,mBAAA,IAAAD,IAAA,CAAmB;iEAHtCxB,KAAA,CAAAmB,SAAS,E,GAKpBvB,mBAAA,CAA8D;IAAtDD,KAAK,EAAC,aAAa;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAoB,IAAA,KAAEF,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,E,sBAGzD1B,mBAAA,CAEM;;IAFMH,KAAK,EAAC,WAAW;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEL,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU;MAC5D0B,YAAA,CAAqCC,4BAAA;IAAlBC,IAAI,EAAC;EAAU,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}