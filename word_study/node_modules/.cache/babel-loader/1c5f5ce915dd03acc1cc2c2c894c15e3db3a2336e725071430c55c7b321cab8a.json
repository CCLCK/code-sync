{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, withKeys as _withKeys, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0fa2e3d3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", {\n  class: \"header-text\"\n}, \"Word Usage\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"el-icon-message-solid\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_footer = _resolveComponent(\"el-footer\");\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createBlock(_component_el_container, {\n    class: \"chat-box-container\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_main, null, {\n      default: _withCtx(() => [_createVNode(_component_el_header, {\n        class: \"chat-header\",\n        onClick: _cache[0] || (_cache[0] = $event => $data.isChatOpen = !$data.isChatOpen)\n      }, {\n        default: _withCtx(() => [_hoisted_1]),\n        _: 1 /* STABLE */\n      }), $data.isChatOpen ? (_openBlock(), _createBlock(_component_el_scrollbar, {\n        key: 0,\n        class: \"chat-content\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: index,\n            class: \"message\"\n          }, [message.sender === 'user' ? (_openBlock(), _createBlock(_component_el_card, {\n            key: 0,\n            class: \"user-message\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(message.text), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)) : (_openBlock(), _createBlock(_component_el_card, {\n            key: 1,\n            class: \"bot-message\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(message.text), 1 /* TEXT */)]),\n\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */))]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }), $data.isChatOpen ? (_openBlock(), _createBlock(_component_el_footer, {\n      key: 0,\n      class: \"chat-input\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.userInput,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.userInput = $event),\n        type: \"textarea\",\n        rows: 2,\n        \"auto-complete\": \"off\",\n        placeholder: \"Type your message...\",\n        onKeydown: _withKeys(_withModifiers($options.sendMessage, [\"exact\", \"prevent\"]), [\"enter\"])\n      }, null, 8 /* PROPS */, [\"modelValue\", \"onKeydown\"]), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.sendMessage\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Send\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createElementBlock(\"div\", {\n      key: 1,\n      class: \"chat-icon\",\n      onClick: _cache[2] || (_cache[2] = $event => $data.isChatOpen = !$data.isChatOpen)\n    }, _hoisted_3))]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_2","_createBlock","_component_el_container","_createVNode","_component_el_main","_component_el_header","onClick","_cache","$event","$data","isChatOpen","_hoisted_1","_component_el_scrollbar","_createElementBlock","_Fragment","_renderList","messages","message","index","key","sender","_component_el_card","text","_component_el_footer","_component_el_input","userInput","type","rows","placeholder","onKeydown","_withKeys","_withModifiers","$options","sendMessage","_component_el_button"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\ChatBox.vue"],"sourcesContent":["<template>\r\n  <el-container class=\"chat-box-container\">\r\n    <el-main>\r\n      <el-header class=\"chat-header\" @click=\"isChatOpen = !isChatOpen\">\r\n        <h3 class=\"header-text\">Word Usage</h3>\r\n      </el-header>\r\n      <el-scrollbar class=\"chat-content\" v-if=\"isChatOpen\">\r\n        <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\r\n          <el-card v-if=\"message.sender === 'user'\" class=\"user-message\">\r\n            {{ message.text }}\r\n          </el-card>\r\n          <el-card v-else class=\"bot-message\">\r\n            {{ message.text }}\r\n          </el-card>\r\n        </div>\r\n      </el-scrollbar>\r\n    </el-main>\r\n    <el-footer class=\"chat-input\" v-if=\"isChatOpen\">\r\n      <el-input\r\n        v-model=\"userInput\"\r\n        type=\"textarea\"\r\n        :rows=\"2\"\r\n        auto-complete=\"off\"\r\n        placeholder=\"Type your message...\"\r\n        @keydown.enter.exact.prevent=\"sendMessage\"\r\n      ></el-input>\r\n      <el-button type=\"primary\" @click=\"sendMessage\">Send</el-button>\r\n    </el-footer>\r\n    <div v-else class=\"chat-icon\" @click=\"isChatOpen = !isChatOpen\">\r\n      <i class=\"el-icon-message-solid\"></i>\r\n    </div>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInput: \"\",\r\n      isChatOpen: false,\r\n      messages: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async sendMessage() {\r\n      if (this.userInput.trim() === \"\") {\r\n        return; // 用户输入为空，不执行任何操作\r\n      }\r\n\r\n      // 将连续的换行替换为一个换行\r\n      this.userInput = this.userInput.replace(/\\n\\s*\\n/g, \"\\n\");\r\n\r\n      this.messages.push({ sender: \"user\", text: this.userInput });\r\n      const userInput = this.userInput;\r\n      this.userInput = \"\";\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5200/api/chat\", { message: userInput });\r\n        this.messages.push({ sender: \"bot\", text: response.data.message });\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"element-ui/theme-chalk/index.css\");\r\n\r\n.chat-box-container {\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 80px;\r\n  width: 300px;\r\n  height: 500px;\r\n  z-index: 1000;\r\n}\r\n\r\n.chat-header {\r\n  background-color: #409eff;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n.header-text {\r\n  margin: 0;\r\n}\r\n\r\n.chat-content {\r\n  height: 360px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.message {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-message,\r\n.bot-message {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-message {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.bot-message {\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.chat-icon {\r\n  cursor: pointer;\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";;gEAIQA,mBAAA,CAAuC;EAAnCC,KAAK,EAAC;AAAa,GAAC,YAAU;gEAyBpCD,mBAAA,CAAqC;EAAlCC,KAAK,EAAC;AAAuB;oBAAhCC,UAAqC,C;;;;;;;;;;uBA5BzCC,YAAA,CA8BeC,uBAAA;IA9BDH,KAAK,EAAC;EAAoB;sBACtC,MAcU,CAdVI,YAAA,CAcUC,kBAAA;wBAbR,MAEY,CAFZD,YAAA,CAEYE,oBAAA;QAFDN,KAAK,EAAC,aAAa;QAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU;;0BAC7D,MAAuC,CAAvCC,UAAuC,C;;UAEAF,KAAA,CAAAC,UAAU,I,cAAnDT,YAAA,CASeW,uBAAA;;QATDb,KAAK,EAAC;;0BACb,MAAoC,E,kBAAzCc,mBAAA,CAOMC,SAAA,QAAAC,WAAA,CAP0BN,KAAA,CAAAO,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;+BAA3BL,mBAAA,CAOM;YAPqCM,GAAG,EAAED,KAAK;YAAEnB,KAAK,EAAC;cAC5CkB,OAAO,CAACG,MAAM,e,cAA7BnB,YAAA,CAEUoB,kBAAA;;YAFgCtB,KAAK,EAAC;;8BAC9C,MAAkB,C,kCAAfkB,OAAO,CAACK,IAAI,iB;;;yDAEjBrB,YAAA,CAEUoB,kBAAA;;YAFMtB,KAAK,EAAC;;8BACpB,MAAkB,C,kCAAfkB,OAAO,CAACK,IAAI,iB;;;;;;;;;QAKab,KAAA,CAAAC,UAAU,I,cAA9CT,YAAA,CAUYsB,oBAAA;;MAVDxB,KAAK,EAAC;;wBACf,MAOY,CAPZI,YAAA,CAOYqB,mBAAA;oBANDf,KAAA,CAAAgB,SAAS;mEAAThB,KAAA,CAAAgB,SAAS,GAAAjB,MAAA;QAClBkB,IAAI,EAAC,UAAU;QACdC,IAAI,EAAE,CAAC;QACR,eAAa,EAAC,KAAK;QACnBC,WAAW,EAAC,sBAAsB;QACjCC,SAAO,EAAAC,SAAA,CAAAC,cAAA,CAAsBC,QAAA,CAAAC,WAAW;4DAE3C9B,YAAA,CAA+D+B,oBAAA;QAApDR,IAAI,EAAC,SAAS;QAAEpB,OAAK,EAAE0B,QAAA,CAAAC;;0BAAa,MAAI,C,iBAAJ,MAAI,E;;;;yBAErDpB,mBAAA,CAEM;;MAFMd,KAAK,EAAC,WAAW;MAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}