{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    words: {\n      type: Array,\n      default: () => []\n    },\n    isVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {},\n  methods: {\n    async removeWord(word, index) {\n      try {\n        // Remove word from the backend notebook\n        const userId = localStorage.getItem('user_id');\n        const response = await axios.post('http://localhost:5500/api/user/remove_word', {\n          user_id: userId,\n          word: word\n        });\n        if (response.data.status === 'success') {\n          // If word removed successfully from backend, remove from the frontend list\n          let newWords = [...this.words]; // 创建words数组的副本\n          newWords.splice(index, 1); // 在副本上进行修改\n          this.$emit('updateWords', newWords); // 发送更新事件，带上新的数组\n        } else {\n          console.error(response.data.message);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    toggleVisibility() {\n      this.$emit(\"toggle-visibility\");\n    }\n  }\n};","map":{"version":3,"names":["axios","props","words","type","Array","default","isVisible","Boolean","data","methods","removeWord","word","index","userId","localStorage","getItem","response","post","user_id","status","newWords","splice","$emit","console","error","message","toggleVisibility"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\WordNotebook.vue"],"sourcesContent":["<template>\r\n  <div class=\"word-notebook\" v-if=\"isVisible\">\r\n    <h2>Your Word Notebook</h2>\r\n    <ul>\r\n      <li v-for=\"(word, index) in words\" :key=\"index\">\r\n        {{ word }}\r\n        <button @click=\"removeWord(word, index)\">Remove</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    words: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    isVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n  \r\n  },\r\n  methods: {\r\n    async removeWord(word, index) {\r\n  try {\r\n    // Remove word from the backend notebook\r\n    const userId = localStorage.getItem('user_id');\r\n    const response = await axios.post('http://localhost:5500/api/user/remove_word', {\r\n      user_id: userId,\r\n      word: word\r\n    });\r\n    if (response.data.status === 'success') {\r\n      // If word removed successfully from backend, remove from the frontend list\r\n      let newWords = [...this.words]; // 创建words数组的副本\r\n      newWords.splice(index, 1); // 在副本上进行修改\r\n      this.$emit('updateWords', newWords); // 发送更新事件，带上新的数组\r\n    } else {\r\n      console.error(response.data.message);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n},\r\n\r\n    toggleVisibility() {\r\n      this.$emit(\"toggle-visibility\");\r\n    },\r\n\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"../../css/notebook.css\");\r\n</style>\r\n"],"mappings":"AAaA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEI,OAAO;MACbF,OAAO,EAAE;IACX;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG,CAEP,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAACC,IAAI,EAAEC,KAAK,EAAE;MAChC,IAAI;QACF;QACA,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;QAC9C,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,4CAA4C,EAAE;UAC9EC,OAAO,EAAEL,MAAM;UACfF,IAAI,EAAEA;QACR,CAAC,CAAC;QACF,IAAIK,QAAQ,CAACR,IAAI,CAACW,MAAK,KAAM,SAAS,EAAE;UACtC;UACA,IAAIC,QAAO,GAAI,CAAC,GAAG,IAAI,CAAClB,KAAK,CAAC,EAAE;UAChCkB,QAAQ,CAACC,MAAM,CAACT,KAAK,EAAE,CAAC,CAAC,EAAE;UAC3B,IAAI,CAACU,KAAK,CAAC,aAAa,EAAEF,QAAQ,CAAC,EAAE;QACvC,OAAO;UACLG,OAAO,CAACC,KAAK,CAACR,QAAQ,CAACR,IAAI,CAACiB,OAAO,CAAC;QACtC;MACF,EAAE,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEGE,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACJ,KAAK,CAAC,mBAAmB,CAAC;IACjC;EAEF;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}