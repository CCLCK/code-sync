{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-77a0acb5\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"word-notebook\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Your Word Notebook\", -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.notebookWords, (word, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createTextVNode(_toDisplayString(word) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeWord(word, index)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","_createElementVNode","$props","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","_ctx","notebookWords","word","index","key","onClick","$event","$options","removeWord","_hoisted_3"],"sources":["H:\\单词学习项目\\word_study\\src\\components\\WordNotebook.vue"],"sourcesContent":["<template>\r\n  <div class=\"word-notebook\" v-if=\"isVisible\">\r\n    <h2>Your Word Notebook</h2>\r\n    <ul>\r\n      <li v-for=\"(word, index) in notebookWords\" :key=\"index\">\r\n        {{ word }}\r\n        <button @click=\"removeWord(word, index)\">Remove</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    words: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    isVisible: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  methods: {\r\n    async removeWord(word, index) {\r\n      try {\r\n        // Remove word from the backend notebook\r\n        const userId = localStorage.getItem('user_id');\r\n        const response = await axios.post('/api/user/remove_word', {\r\n          user_id: userId,\r\n          word: word\r\n        });\r\n        if (response.data.status === 'success') {\r\n          // If word removed successfully from backend, remove from the frontend list\r\n          this.notebookWords.splice(index, 1);\r\n        } else {\r\n          console.error(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    toggleVisibility() {\r\n      this.$emit(\"toggle-visibility\");\r\n    },\r\n    async loadWords() {\r\n      try {\r\n        const userId = localStorage.getItem('user_id');\r\n        const response = await axios.get('/api/user/words', {\r\n          params: { user_id: userId }\r\n        });\r\n        if (response.data.status === 'success') {\r\n          this.notebookWords = response.data.words;\r\n        } else {\r\n          console.error(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // Load words from backend on component mount\r\n    this.loadWords();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import url(\"../../css/notebook.css\");\r\n</style>\r\n"],"mappings":";;;;EACOA,KAAK,EAAC;;gEACTC,mBAAA,CAA2B,YAAvB,oBAAkB;;;SADSC,MAAA,CAAAC,SAAS,I,cAA1CC,mBAAA,CAQM,OARNC,UAQM,GAPJC,UAA2B,EAC3BL,mBAAA,CAKK,c,kBAJHG,mBAAA,CAGKG,SAAA,QAAAC,WAAA,CAHuBC,IAAA,CAAAC,aAAa,GAA7BC,IAAI,EAAEC,KAAK;yBAAvBR,mBAAA,CAGK;MAHuCS,GAAG,EAAED;IAAK,I,kCACjDD,IAAI,IAAG,GACV,iBAAAV,mBAAA,CAAwD;MAA/Ca,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACN,IAAI,EAAEC,KAAK;OAAG,QAAM,iBAAAM,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}